exclude: ^(buildspec.yml|.pre-commit-config.yaml)$
fail_fast: false
default_install_hook_types: [ pre-commit, post-commit ]
repos:
  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
      - id: poetry-lock
        args: [ "--check" ]
        files: "(pyproject.toml|poetry.lock)"
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: "[CHANGELOG.md]"
      - id: fix-encoding-pragma
      - id: mixed-line-ending
        args:
          - --fix=auto
      - id: pretty-format-json
        args:
          - --autofix
          - --indent=4
          - --no-sort-keys
        exclude: "[inputs.json|syntax_error.json]"
      - id: trailing-whitespace
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          - --config=.config/.flake8
        additional_dependencies:
          - flake8-bugbear>=19.3.0
          - flake8-builtins>=1.4.1
          - flake8-commas>=2.0.0
          - flake8-comprehensions>=2.1.0
          - flake8-debugger>=3.1.0
          - flake8-pep3101>=1.2.1
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods
      - id: python-no-log-warn
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        files: "^src/"
  - repo: https://github.com/domdfcoding/flake2lint
    rev: v0.4.3
    hooks:
      - id: flake2lint
        files: "^src/postpanda_helper/"
  - repo: https://github.com/mumblepins/dep_checker
    rev: v0.7.1
    hooks:
      - id: dep_checker
        args:
          - --req-file
          - pyproject.toml
          - src/postpanda_helper
          - -a
          - psycopg2cffi
#  - repo: https://github.com/pre-commit/mirrors-mypy
#    rev: 'v0.982'
#    hooks:
#      - id: mypy
##        pass_filenames: false
#        args: [ '--config-file', 'pyproject.toml' ]
#        files: '^(src/.*|[^/]*)\.py$'
#        additional_dependencies:
#          - types-requests
#          - pydantic
#          - html2text
#          - boto3-stubs
#          - pytest-stub
#          - types-PyYaml
#          - pandas-stubs
#          - sqlalchemy[mypy]
#          - types-psycopg2
#          - numpy>=1.20
#  - repo: local
#    hooks:
#      - id: pylint
#        name: pylint
#        entry: >
#          poetry run
#          pylint
#        language: system
#        types: [ python ]
#        args:
#          [
#            "-rn", # Only display messages
#            "-sn", # Don't display the score
#            "--extension-pkg-whitelist=pydantic",
#            "--rcfile=.config/.pylintrc",
#          ]
#      - id: pytest-local
#        name: pytest-local
#        description: Run pytest in the local virtualenv
#        stages: [ manual ]
#        entry: >
#          poetry run
#          pytest
#          "tests/"
#          --verbose
#          --cov=postpanda_helper
#          --pyargs "postpanda_helper"
#        language: system
#        pass_filenames: false
#        always_run: true
#        types: [ python ]
#        verbose: true
  - repo: local
    hooks:
      - id: gitchangelog
        language: system
        always_run: true
        pass_filenames: false
        name: Generate changelog
        entry: poetry run bash -c "GITCHANGELOG_CONFIG_FILENAME='.config/.gitchangelog.rc' gitchangelog > CHANGELOG.md"
        stages: [ post-commit ]
